

unbind C-b

# single session mode
set -g prefix C-a
# set-option -g prefix C-t

# Dual session mode
# C-t does first C-a does nested based on
# https://www.unwiredcouch.com/2013/11/15/my-tmux-setup.html
set-option -g prefix C-t
bind C-a send-prefix
bind-key -n C-a send-prefix

# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

set -s escape-time 1
set -g base-index 1
setw -g pane-base-index 1

bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Split panes
bind | split-window -h
bind - split-window -v

# join panes
bind-key          S choose-window "join-pane -v -s "%%""
bind-key          V choose-window "join-pane -h -s "%%""


# vim style movements
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|vim|ssh|mosh?)(diff)?$'"
###bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# Smart pane switching with awareness of vim splits
bind -n C-k run-shell 'tmux-vim-select-pane -U'
bind -n C-j run-shell 'tmux-vim-select-pane -D'
bind -n C-h run-shell 'tmux-vim-select-pane -L'
bind -n C-l run-shell 'tmux-vim-select-pane -R'
bind -n "C-\\" run-shell 'tmux-vim-select-pane -l'

# Bring back clear screen under tmux prefix
bind C-l send-keys 'C-l'
# Bring back kill line under tmux prefix
bind C-k send-keys 'C-k'

#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# Resize:
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# F2/F3 for previous/next are bice
# bind-key -n F3 previous-window
# bind-key -n F4 next-window
bind-key -n F3 send-keys C-t p
bind-key -n F4 send-keys C-t n


# Status bar
#set -g status-interval 60
#setw -g monitor-activity on
#set -g visual-activity on

set -g default-terminal "screen-256color"

# default statusbar colors
#set -g status-bg black
#set -g status-fg yellow
#set -g status-attr default

# default window title colors
#setw -g window-status-fg brightblue
#setw -g window-status-bg default

# active window title colors
#setw -g window-status-current-fg yellow
#setw -g window-status-current-bg default
#setw -g window-status-current-attr dim

# pane border
#set -g pane-border-fg black
#set -g pane-border-bg default
#set -g pane-active-border-fg yellow
#set -g pane-active-border-bg default

# command line/message text
#set -g message-bg black
#set -g message-fg yellow

# pane number display
#set -g display-panes-active-colour yellow
#set -g display-panes-colour brightblue

# clock
#setw -g clock-mode-colour yellow
# --- end colors

#set -g status "on"
#set -g status-interval 2
#set -g status-left-length 20
#set -g status-right-length "150"

#set -g status-bg colour233
#set -g status-fg colour231
#set -g status-justify left
#set -g status-keys vi

# set -g status-left "#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold]#[noitalics]#[nounderscore],#[fg=colour16]#[bg=colour254]#[bold]#[noitalics]#[nounderscore]} #S #{?client_prefix,#[fg=colour31],#[fg=colour254]}#[bg=colour233]#[nobold] #(env $POWERLINE_COMMAND $POWERLINE_COMMAND_ARGS tmux left)"
# set -g status-right "#(env "$POWERLINE_COMMAND" $POWERLINE_COMMAND_ARGS tmux right -R pane_id=`tmux display -p "#D"`)"
#set -g status-right "#[fg=colour233,bg=default,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] #(uptime | awk '{print $3}')d#[fg=colour241,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore]#(uptime | rev | cut -d":" -f1 | rev | sed s/,//g)#[fg=colour236,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour236,nobold,noitalics,nounderscore] #(date +"%Y-%m-%d")#[fg=colour241,bg=colour236,nobold,noitalics,nounderscore] #[fg=colour252,bg=colour236,bold,noitalics,nounderscore] ⌚ "%H:%M:%S"#[fg=colour252,bg=colour236,nobold,noitalics,nounderscore] #[fg=colour16,bg=colour252,bold,noitalics,nounderscore]  #(hostname)"
#set -g status-right "#[fg=colour233,bg=default,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] #(uptime | awk '{print $3}')d#[fg=colour241,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour2,bg=colour233,nobold,noitalics,nounderscore]#(uptime | rev | cut -d":" -f1 | rev | sed s/,//g)#[fg=colour236,bg=colour233,nobold,noitalics,nounderscore] #[fg=colour247,bg=colour236,nobold,noitalics,nounderscore] #(date +"%Y-%m-%d")#[fg=colour241,bg=colour236,nobold,noitalics,nounderscore] #[fg=colour252,bg=colour236,bold,noitalics,nounderscore] "%H:%M:%S"#[fg=colour252,bg=colour236,nobold,noitalics,nounderscore] #[fg=colour16,bg=colour252,bold,noitalics,nounderscore]  #(hostname)"

# set -g status-style fg=colour231,bg=colour233


#set -g window-status-current-format "#[fg=colour233,bg=colour31,nobold,noitalics,nounderscore] #[fg=colour117,bg=colour31,nobold,noitalics,nounderscore]#I  #[fg=colour231,bg=colour31,bold,noitalics,nounderscore]#W #[fg=colour31,bg=colour233,nobold,noitalics,nounderscore] "
#set -g window-status-fg colour249
#set -g window-status-format "#[fg=colour244,bg=colour233,nobold,noitalics,nounderscore]  #I #[fg=colour240,bg=colour233,nobold,noitalics,nounderscore] #[default]#W   "
#set -g window-status-last-attr none
#set -g window-status-last-bg colour233
#set -g window-status-last-fg colour31
#set -g window-status-last-style fg=colour31,bg=colour233
#set -g window-status-style fg=colour249,bg=colour233

# set -g window-status-separator ""

#run-shell "powerline-daemon -q"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'chrisfleming/tmux-powerline'
#set -g @plugin 'tmux-plugins/tmux-logging'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

set-option -g update-environment 'DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY DBUS_SESSION_BUS_ADDRESS'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
